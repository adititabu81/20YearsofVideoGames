<link rel="stylesheet" type="text/css" href="/css/mysql.css">
<div class="container-fluid">
    <nav class="navbar navbar-inverse">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar-collapse-4">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand {{activedash}}" href="/dashboard">20 Years of Games</a>
            </div>
            <div class="collapse navbar-collapse" id="navbar-collapse-4">
                <ul class="nav navbar-nav navbar-right">
                    <li class="{{activeRelational}}"><a href="/relational">MySQL</a></li>
                    <li class="{{activeMongoDB}}"><a href="/mongo">MongoDB</a></li>
                    <li class="{{activeNeo}}"><a href="/neo">Neo4j</a></li>
                    <li class="{{activeAnaly}}"><a href="/analysis">Analysis</a></li>
                </ul>
            </div>
        </div>
    </nav>
</div>
<!-- END OF NAV BAR -->
<div class="container">
    <h1>Welcome!</h1>
    <p>The video game data set contains the past 20 years of game reviews from IGN. Discover and analyze trends in the gaming industry with games, platforms, genres, ratings, and dates.
</p>
    <div id="summary">
        <h3> Distribution of Number of Games in Each Year</h3>
    </div>
    <div >
        <h3> Distribution Genres</h3>
        <p>A minimum of 500 games in each genre is selcted and grouped</p>
        <svg id="summary2" width="800" height="600"></svg>
    </div>
     <div >
        <h3> Distribution Platform</h3>
        <p>Platform with minimum 500 games are selcted and grouped</p>
        <svg id="summary3" width="800" height="600"></svg>
    </div>
    <div>
        <h3> Distribution by Score Phrase</h3>
        <p>List of Score Phrase and the games by the count</p>
        <svg id="summary4" width="800" height="600"></svg>
    </div>
</div>
<script>
  function summary1(){

// set the dimensions of the canvas
var margin = { top: 20, right: 20, bottom: 170, left: 100 },
    width = 800 - margin.left - margin.right,
    height = 400 - margin.top - margin.bottom;

// set the ranges
var x = d3.scale.ordinal().rangeRoundBands([0, width], .05);

var y = d3.scale.linear().range([height, 0]);

// define the axis
var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom")


var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
    .ticks(10);

var tip = d3.tip()
    .attr('class', 'd3-tip')
    .offset([-10, 0])
    .html(function(d) {
        return "<strong>Year:</strong> <span>" + d.name + "</span>" + "<br/>" + "<strong>Count:</strong> <span style='color:red'>" + d.Freq + "</span>";
    })

// add the SVG element
var svg = d3.select("body #summary").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
    .append("g")
    .attr("transform",
        "translate(" + margin.left + "," + margin.top + ")");

svg.call(tip);

var url = 'http://localhost:3000/summary1';

d3.json(url, function(error, data) {

    data.forEach(function(d) {
        d.name = d.name;
        d.Freq = +d.Freq;
    });

    // scale the range of the data
    x.domain(data.map(function(d) { return d.name; }));
    y.domain([0, d3.max(data, function(d) { return d.Freq; })]);



    // add axis
    svg.append("g")
        .attr("class", "x axis")
        .attr("transform", "translate(0," + height + ")")
        .call(xAxis)
        .selectAll("text")
        .style("text-anchor", "end")
        .attr("dx", "-.8em")
        .attr("dy", "-.55em")
        .style("font-size", "15px")
        .attr("transform", "rotate(-90)");

    svg.append("g")
        .attr("class", "y axis")
        .call(yAxis)
        .append("text")
        .attr("transform", "rotate(-360)")
        .attr("y", 5)
        .attr("dy", "-0.29em")
        .style("font-size", "13px")
        .style("text-anchor", "end")
        .text("No of Games");


    // Add bar chart
    svg.selectAll("bar")
        .data(data)
        .enter().append("rect")
        .attr("class", "bar")
        .attr("x", function(d) { return x(d.name); })
        .attr("width", x.rangeBand())
        .attr("y", function(d) { return y(d.Freq); })
        .attr("height", function(d) { return height - y(d.Freq); })
        .on('mouseover', tip.show)
        .on('mouseout', tip.hide);


});
}
summary1();
</script>
<script>
function summary2() {
 var svg = d3.select("#summary2"),
    width = +svg.attr("width"),
    height = +svg.attr("height"),
    radius = Math.min(width, height) / 2,
    g = svg.append("g").attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

var color = d3.scale.category20c(); 


var tip = d3.tip()
    .attr('class', 'd3-tip')
    .offset([-10, 0])
    .html(function(d) {
        return "<strong>Genre:</strong> <span>" + d.data.name + "</span>" + "<br/>" + "<strong>Count:</strong> <span style='color:red'>" + d.data.Freq + "</span>";
    })


svg.call(tip);
var pie = d3.layout.pie()
    .sort(null)
    .value(function(d) { return d.Freq; });

var path = d3.svg.arc()
    .outerRadius(radius - 1)
    .innerRadius(0);

var label = d3.svg.arc()
    .outerRadius(radius - 40)
    .innerRadius(radius - 40);
var url= "http://localhost:3000/summary2";
d3.json(url, function(error, data) {
  if (error) throw error;

  var arc = g.selectAll(".arc")
    .data(pie(data))
    .enter().append("g")
    .attr("class", "arc")
    .on('mouseover', tip.show)
    .on('mouseout', tip.hide);

  arc.append("path")
      .attr("d", path)
      .attr("fill", function(d) { return color(d.data.name); });

  arc.append("text")
      .attr("transform", function(d) { return "translate(" + label.centroid(d) + ")"; })
      .attr("dy", "0.35em")
      .style("font-size", "13px")
      .text(function(d) { return d.data.name; });
});

}
summary2();
</script>
<script>
function summary3() {
 var svg = d3.select("#summary3"),
    width = +svg.attr("width"),
    height = +svg.attr("height"),
    radius = Math.min(width, height) / 2,
    g = svg.append("g").attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

var color = d3.scale.category20c(); 


var tip = d3.tip()
    .attr('class', 'd3-tip')
    .offset([-10, 0])
    .html(function(d) {
        return "<strong>Genre:</strong> <span>" + d.data.name + "</span>" + "<br/>" + "<strong>Count:</strong> <span style='color:red'>" + d.data.Freq + "</span>";
    })


svg.call(tip);
var pie = d3.layout.pie()
    .sort(null)
    .value(function(d) { return d.Freq; });

var path = d3.svg.arc()
    .outerRadius(radius - 1)
    .innerRadius(0);

var label = d3.svg.arc()
    .outerRadius(radius - 40)
    .innerRadius(radius - 40);
var url= "http://localhost:3000/summary3";
d3.json(url, function(error, data) {
  if (error) throw error;

  var arc = g.selectAll(".arc")
    .data(pie(data))
    .enter().append("g")
    .attr("class", "arc")
    .on('mouseover', tip.show)
    .on('mouseout', tip.hide);

  arc.append("path")
      .attr("d", path)
      .attr("fill", function(d) { return color(d.data.name); });

  arc.append("text")
      .attr("transform", function(d) { return "translate(" + label.centroid(d) + ")"; })
      .attr("dy", "0.35em")
      .style("font-size", "13px")
      .text(function(d) { return d.data.name; });
});

}
summary3();
</script>
<script>
function summary4() {
 var svg = d3.select("#summary4"),
    width = +svg.attr("width"),
    height = +svg.attr("height"),
    radius = Math.min(width, height) / 2,
    g = svg.append("g").attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

var color = d3.scale.category20c(); 


var tip = d3.tip()
    .attr('class', 'd3-tip')
    .offset([-10, 0])
    .html(function(d) {
        return "<strong>Genre:</strong> <span>" + d.data.name + "</span>" + "<br/>" + "<strong>Count:</strong> <span style='color:red'>" + d.data.Freq + "</span>";
    })


svg.call(tip);
var pie = d3.layout.pie()
    .sort(null)
    .value(function(d) { return d.Freq; });

var path = d3.svg.arc()
    .outerRadius(radius - 1)
    .innerRadius(0);

var label = d3.svg.arc()
    .outerRadius(radius - 40)
    .innerRadius(radius - 40);
var url= "http://localhost:3000/summary4";
d3.json(url, function(error, data) {
  if (error) throw error;
  var arc = g.selectAll(".arc")
    .data(pie(data))
    .enter().append("g")
    .attr("class", "arc")
    .on('mouseover', tip.show)
    .on('mouseout', tip.hide);

  arc.append("path")
      .attr("d", path)
      .attr("fill", function(d) { return color(d.data.name); });

  arc.append("text")
      .attr("transform", function(d) { return "translate(" + label.centroid(d) + ")"; })
      .attr("dy", "0.35em")
      .style("font-size", "13px")
      .text(function(d) { return d.data.name; });
});

}
summary4();
</script>